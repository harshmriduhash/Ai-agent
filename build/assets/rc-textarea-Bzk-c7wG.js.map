{"version":3,"file":"rc-textarea-Bzk-c7wG.js","sources":["../../node_modules/rc-textarea/es/calculateNodeHeight.js","../../node_modules/rc-textarea/es/ResizableTextArea.js","../../node_modules/rc-textarea/es/TextArea.js"],"sourcesContent":["// Thanks to https://github.com/andreypopp/react-textarea-autosize/\n\n/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */\n\nvar HIDDEN_TEXTAREA_STYLE = \"\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important;\\n  pointer-events: none !important;\\n\";\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'font-variant', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing', 'word-break', 'white-space'];\nvar computedStyleCache = {};\nvar hiddenTextarea;\nexport function calculateNodeStyling(node) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');\n  if (useCache && computedStyleCache[nodeRef]) {\n    return computedStyleCache[nodeRef];\n  }\n  var style = window.getComputedStyle(node);\n  var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\n  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n  var sizingStyle = SIZING_STYLE.map(function (name) {\n    return \"\".concat(name, \":\").concat(style.getPropertyValue(name));\n  }).join(';');\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n  if (useCache && nodeRef) {\n    computedStyleCache[nodeRef] = nodeInfo;\n  }\n  return nodeInfo;\n}\nexport default function calculateAutoSizeStyle(uiTextNode) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var minRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var maxRows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tab-index', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    // fix: A form field element should have an id or name attribute\n    // A form field element has neither an id nor a name attribute. This might prevent the browser from correctly autofilling the form.\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\n    hiddenTextarea.setAttribute('name', 'hiddenTextarea');\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  // Fix wrap=\"off\" issue\n  // https://github.com/ant-design/ant-design/issues/6577\n  if (uiTextNode.getAttribute('wrap')) {\n    hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap'));\n  } else {\n    hiddenTextarea.removeAttribute('wrap');\n  }\n\n  // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache),\n    paddingSize = _calculateNodeStyling.paddingSize,\n    borderSize = _calculateNodeStyling.borderSize,\n    boxSizing = _calculateNodeStyling.boxSizing,\n    sizingStyle = _calculateNodeStyling.sizingStyle;\n\n  // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n  hiddenTextarea.setAttribute('style', \"\".concat(sizingStyle, \";\").concat(HIDDEN_TEXTAREA_STYLE));\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n  var minHeight = undefined;\n  var maxHeight = undefined;\n  var overflowY;\n  var height = hiddenTextarea.scrollHeight;\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height += borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height -= paddingSize;\n  }\n  if (minRows !== null || maxRows !== null) {\n    // measure height of a textarea with a single row\n    hiddenTextarea.value = ' ';\n    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows;\n      if (boxSizing === 'border-box') {\n        minHeight = minHeight + paddingSize + borderSize;\n      }\n      height = Math.max(minHeight, height);\n    }\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows;\n      if (boxSizing === 'border-box') {\n        maxHeight = maxHeight + paddingSize + borderSize;\n      }\n      overflowY = height > maxHeight ? '' : 'hidden';\n      height = Math.min(maxHeight, height);\n    }\n  }\n  var style = {\n    height: height,\n    overflowY: overflowY,\n    resize: 'none'\n  };\n  if (minHeight) {\n    style.minHeight = minHeight;\n  }\n  if (maxHeight) {\n    style.maxHeight = maxHeight;\n  }\n  return style;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"defaultValue\", \"value\", \"autoSize\", \"onResize\", \"className\", \"style\", \"disabled\", \"onChange\", \"onInternalAutoSize\"];\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport raf from \"rc-util/es/raf\";\nimport * as React from 'react';\nimport calculateAutoSizeStyle from \"./calculateNodeHeight\";\nvar RESIZE_START = 0;\nvar RESIZE_MEASURING = 1;\nvar RESIZE_STABLE = 2;\nvar ResizableTextArea = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _ref = props,\n    prefixCls = _ref.prefixCls,\n    defaultValue = _ref.defaultValue,\n    value = _ref.value,\n    autoSize = _ref.autoSize,\n    onResize = _ref.onResize,\n    className = _ref.className,\n    style = _ref.style,\n    disabled = _ref.disabled,\n    onChange = _ref.onChange,\n    onInternalAutoSize = _ref.onInternalAutoSize,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n\n  // =============================== Value ================================\n  var _useMergedState = useMergedState(defaultValue, {\n      value: value,\n      postState: function postState(val) {\n        return val !== null && val !== void 0 ? val : '';\n      }\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedValue = _useMergedState2[0],\n    setMergedValue = _useMergedState2[1];\n  var onInternalChange = function onInternalChange(event) {\n    setMergedValue(event.target.value);\n    onChange === null || onChange === void 0 || onChange(event);\n  };\n\n  // ================================ Ref =================================\n  var textareaRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return {\n      textArea: textareaRef.current\n    };\n  });\n\n  // ============================== AutoSize ==============================\n  var _React$useMemo = React.useMemo(function () {\n      if (autoSize && _typeof(autoSize) === 'object') {\n        return [autoSize.minRows, autoSize.maxRows];\n      }\n      return [];\n    }, [autoSize]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    minRows = _React$useMemo2[0],\n    maxRows = _React$useMemo2[1];\n  var needAutoSize = !!autoSize;\n\n  // =============================== Scroll ===============================\n  // https://github.com/ant-design/ant-design/issues/21870\n  var fixFirefoxAutoScroll = function fixFirefoxAutoScroll() {\n    try {\n      // FF has bug with jump of scroll to top. We force back here.\n      if (document.activeElement === textareaRef.current) {\n        var _textareaRef$current = textareaRef.current,\n          selectionStart = _textareaRef$current.selectionStart,\n          selectionEnd = _textareaRef$current.selectionEnd,\n          scrollTop = _textareaRef$current.scrollTop;\n\n        // Fix Safari bug which not rollback when break line\n        // This makes Chinese IME can't input. Do not fix this\n        // const { value: tmpValue } = textareaRef.current;\n        // textareaRef.current.value = '';\n        // textareaRef.current.value = tmpValue;\n\n        textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\n        textareaRef.current.scrollTop = scrollTop;\n      }\n    } catch (e) {\n      // Fix error in Chrome:\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  };\n\n  // =============================== Resize ===============================\n  var _React$useState = React.useState(RESIZE_STABLE),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    resizeState = _React$useState2[0],\n    setResizeState = _React$useState2[1];\n  var _React$useState3 = React.useState(),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    autoSizeStyle = _React$useState4[0],\n    setAutoSizeStyle = _React$useState4[1];\n  var startResize = function startResize() {\n    setResizeState(RESIZE_START);\n    if (process.env.NODE_ENV === 'test') {\n      onInternalAutoSize === null || onInternalAutoSize === void 0 || onInternalAutoSize();\n    }\n  };\n\n  // Change to trigger resize measure\n  useLayoutEffect(function () {\n    if (needAutoSize) {\n      startResize();\n    }\n  }, [value, minRows, maxRows, needAutoSize]);\n  useLayoutEffect(function () {\n    if (resizeState === RESIZE_START) {\n      setResizeState(RESIZE_MEASURING);\n    } else if (resizeState === RESIZE_MEASURING) {\n      var textareaStyles = calculateAutoSizeStyle(textareaRef.current, false, minRows, maxRows);\n\n      // Safari has bug that text will keep break line on text cut when it's prev is break line.\n      // ZombieJ: This not often happen. So we just skip it.\n      // const { selectionStart, selectionEnd, scrollTop } = textareaRef.current;\n      // const { value: tmpValue } = textareaRef.current;\n      // textareaRef.current.value = '';\n      // textareaRef.current.value = tmpValue;\n\n      // if (document.activeElement === textareaRef.current) {\n      //   textareaRef.current.scrollTop = scrollTop;\n      //   textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\n      // }\n\n      setResizeState(RESIZE_STABLE);\n      setAutoSizeStyle(textareaStyles);\n    } else {\n      fixFirefoxAutoScroll();\n    }\n  }, [resizeState]);\n\n  // We lock resize trigger by raf to avoid Safari warning\n  var resizeRafRef = React.useRef();\n  var cleanRaf = function cleanRaf() {\n    raf.cancel(resizeRafRef.current);\n  };\n  var onInternalResize = function onInternalResize(size) {\n    if (resizeState === RESIZE_STABLE) {\n      onResize === null || onResize === void 0 || onResize(size);\n      if (autoSize) {\n        cleanRaf();\n        resizeRafRef.current = raf(function () {\n          startResize();\n        });\n      }\n    }\n  };\n  React.useEffect(function () {\n    return cleanRaf;\n  }, []);\n\n  // =============================== Render ===============================\n  var mergedAutoSizeStyle = needAutoSize ? autoSizeStyle : null;\n  var mergedStyle = _objectSpread(_objectSpread({}, style), mergedAutoSizeStyle);\n  if (resizeState === RESIZE_START || resizeState === RESIZE_MEASURING) {\n    mergedStyle.overflowY = 'hidden';\n    mergedStyle.overflowX = 'hidden';\n  }\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onInternalResize,\n    disabled: !(autoSize || onResize)\n  }, /*#__PURE__*/React.createElement(\"textarea\", _extends({}, restProps, {\n    ref: textareaRef,\n    style: mergedStyle,\n    className: classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-disabled\"), disabled)),\n    disabled: disabled,\n    value: mergedValue,\n    onChange: onInternalChange\n  })));\n});\nexport default ResizableTextArea;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"defaultValue\", \"value\", \"onFocus\", \"onBlur\", \"onChange\", \"allowClear\", \"maxLength\", \"onCompositionStart\", \"onCompositionEnd\", \"suffix\", \"prefixCls\", \"showCount\", \"count\", \"className\", \"style\", \"disabled\", \"hidden\", \"classNames\", \"styles\", \"onResize\", \"onClear\", \"onPressEnter\", \"readOnly\", \"autoSize\", \"onKeyDown\"];\nimport clsx from 'classnames';\nimport { BaseInput } from 'rc-input';\nimport useCount from \"rc-input/es/hooks/useCount\";\nimport { resolveOnChange } from \"rc-input/es/utils/commonUtils\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useEffect, useImperativeHandle, useRef } from 'react';\nimport ResizableTextArea from \"./ResizableTextArea\";\nvar TextArea = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _countConfig$max;\n  var defaultValue = _ref.defaultValue,\n    customValue = _ref.value,\n    onFocus = _ref.onFocus,\n    onBlur = _ref.onBlur,\n    onChange = _ref.onChange,\n    allowClear = _ref.allowClear,\n    maxLength = _ref.maxLength,\n    onCompositionStart = _ref.onCompositionStart,\n    onCompositionEnd = _ref.onCompositionEnd,\n    suffix = _ref.suffix,\n    _ref$prefixCls = _ref.prefixCls,\n    prefixCls = _ref$prefixCls === void 0 ? 'rc-textarea' : _ref$prefixCls,\n    showCount = _ref.showCount,\n    count = _ref.count,\n    className = _ref.className,\n    style = _ref.style,\n    disabled = _ref.disabled,\n    hidden = _ref.hidden,\n    classNames = _ref.classNames,\n    styles = _ref.styles,\n    onResize = _ref.onResize,\n    onClear = _ref.onClear,\n    onPressEnter = _ref.onPressEnter,\n    readOnly = _ref.readOnly,\n    autoSize = _ref.autoSize,\n    onKeyDown = _ref.onKeyDown,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useMergedState = useMergedState(defaultValue, {\n      value: customValue,\n      defaultValue: defaultValue\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    value = _useMergedState2[0],\n    setValue = _useMergedState2[1];\n  var formatValue = value === undefined || value === null ? '' : String(value);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    focused = _React$useState2[0],\n    setFocused = _React$useState2[1];\n  var compositionRef = React.useRef(false);\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    textareaResized = _React$useState4[0],\n    setTextareaResized = _React$useState4[1];\n\n  // =============================== Ref ================================\n  var holderRef = useRef(null);\n  var resizableTextAreaRef = useRef(null);\n  var getTextArea = function getTextArea() {\n    var _resizableTextAreaRef;\n    return (_resizableTextAreaRef = resizableTextAreaRef.current) === null || _resizableTextAreaRef === void 0 ? void 0 : _resizableTextAreaRef.textArea;\n  };\n  var focus = function focus() {\n    getTextArea().focus();\n  };\n  useImperativeHandle(ref, function () {\n    var _holderRef$current;\n    return {\n      resizableTextArea: resizableTextAreaRef.current,\n      focus: focus,\n      blur: function blur() {\n        getTextArea().blur();\n      },\n      nativeElement: ((_holderRef$current = holderRef.current) === null || _holderRef$current === void 0 ? void 0 : _holderRef$current.nativeElement) || getTextArea()\n    };\n  });\n  useEffect(function () {\n    setFocused(function (prev) {\n      return !disabled && prev;\n    });\n  }, [disabled]);\n\n  // =========================== Select Range ===========================\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    selection = _React$useState6[0],\n    setSelection = _React$useState6[1];\n  React.useEffect(function () {\n    if (selection) {\n      var _getTextArea;\n      (_getTextArea = getTextArea()).setSelectionRange.apply(_getTextArea, _toConsumableArray(selection));\n    }\n  }, [selection]);\n\n  // ============================== Count ===============================\n  var countConfig = useCount(count, showCount);\n  var mergedMax = (_countConfig$max = countConfig.max) !== null && _countConfig$max !== void 0 ? _countConfig$max : maxLength;\n\n  // Max length value\n  var hasMaxLength = Number(mergedMax) > 0;\n  var valueLength = countConfig.strategy(formatValue);\n  var isOutOfRange = !!mergedMax && valueLength > mergedMax;\n\n  // ============================== Change ==============================\n  var triggerChange = function triggerChange(e, currentValue) {\n    var cutValue = currentValue;\n    if (!compositionRef.current && countConfig.exceedFormatter && countConfig.max && countConfig.strategy(currentValue) > countConfig.max) {\n      cutValue = countConfig.exceedFormatter(currentValue, {\n        max: countConfig.max\n      });\n      if (currentValue !== cutValue) {\n        setSelection([getTextArea().selectionStart || 0, getTextArea().selectionEnd || 0]);\n      }\n    }\n    setValue(cutValue);\n    resolveOnChange(e.currentTarget, e, onChange, cutValue);\n  };\n\n  // =========================== Value Update ===========================\n  var onInternalCompositionStart = function onInternalCompositionStart(e) {\n    compositionRef.current = true;\n    onCompositionStart === null || onCompositionStart === void 0 || onCompositionStart(e);\n  };\n  var onInternalCompositionEnd = function onInternalCompositionEnd(e) {\n    compositionRef.current = false;\n    triggerChange(e, e.currentTarget.value);\n    onCompositionEnd === null || onCompositionEnd === void 0 || onCompositionEnd(e);\n  };\n  var onInternalChange = function onInternalChange(e) {\n    triggerChange(e, e.target.value);\n  };\n  var handleKeyDown = function handleKeyDown(e) {\n    if (e.key === 'Enter' && onPressEnter) {\n      onPressEnter(e);\n    }\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown(e);\n  };\n  var handleFocus = function handleFocus(e) {\n    setFocused(true);\n    onFocus === null || onFocus === void 0 || onFocus(e);\n  };\n  var handleBlur = function handleBlur(e) {\n    setFocused(false);\n    onBlur === null || onBlur === void 0 || onBlur(e);\n  };\n\n  // ============================== Reset ===============================\n  var handleReset = function handleReset(e) {\n    setValue('');\n    focus();\n    resolveOnChange(getTextArea(), e, onChange);\n  };\n  var suffixNode = suffix;\n  var dataCount;\n  if (countConfig.show) {\n    if (countConfig.showFormatter) {\n      dataCount = countConfig.showFormatter({\n        value: formatValue,\n        count: valueLength,\n        maxLength: mergedMax\n      });\n    } else {\n      dataCount = \"\".concat(valueLength).concat(hasMaxLength ? \" / \".concat(mergedMax) : '');\n    }\n    suffixNode = /*#__PURE__*/React.createElement(React.Fragment, null, suffixNode, /*#__PURE__*/React.createElement(\"span\", {\n      className: clsx(\"\".concat(prefixCls, \"-data-count\"), classNames === null || classNames === void 0 ? void 0 : classNames.count),\n      style: styles === null || styles === void 0 ? void 0 : styles.count\n    }, dataCount));\n  }\n  var handleResize = function handleResize(size) {\n    var _getTextArea2;\n    onResize === null || onResize === void 0 || onResize(size);\n    if ((_getTextArea2 = getTextArea()) !== null && _getTextArea2 !== void 0 && _getTextArea2.style.height) {\n      setTextareaResized(true);\n    }\n  };\n  var isPureTextArea = !autoSize && !showCount && !allowClear;\n  return /*#__PURE__*/React.createElement(BaseInput, {\n    ref: holderRef,\n    value: formatValue,\n    allowClear: allowClear,\n    handleReset: handleReset,\n    suffix: suffixNode,\n    prefixCls: prefixCls,\n    classNames: _objectSpread(_objectSpread({}, classNames), {}, {\n      affixWrapper: clsx(classNames === null || classNames === void 0 ? void 0 : classNames.affixWrapper, _defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-show-count\"), showCount), \"\".concat(prefixCls, \"-textarea-allow-clear\"), allowClear))\n    }),\n    disabled: disabled,\n    focused: focused,\n    className: clsx(className, isOutOfRange && \"\".concat(prefixCls, \"-out-of-range\")),\n    style: _objectSpread(_objectSpread({}, style), textareaResized && !isPureTextArea ? {\n      height: 'auto'\n    } : {}),\n    dataAttrs: {\n      affixWrapper: {\n        'data-count': typeof dataCount === 'string' ? dataCount : undefined\n      }\n    },\n    hidden: hidden,\n    readOnly: readOnly,\n    onClear: onClear\n  }, /*#__PURE__*/React.createElement(ResizableTextArea, _extends({}, rest, {\n    autoSize: autoSize,\n    maxLength: maxLength,\n    onKeyDown: handleKeyDown,\n    onChange: onInternalChange,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onCompositionStart: onInternalCompositionStart,\n    onCompositionEnd: onInternalCompositionEnd,\n    className: clsx(classNames === null || classNames === void 0 ? void 0 : classNames.textarea),\n    style: _objectSpread(_objectSpread({}, styles === null || styles === void 0 ? void 0 : styles.textarea), {}, {\n      resize: style === null || style === void 0 ? void 0 : style.resize\n    }),\n    disabled: disabled,\n    prefixCls: prefixCls,\n    onResize: handleResize,\n    ref: resizableTextAreaRef,\n    readOnly: readOnly\n  })));\n});\nexport default TextArea;"],"names":["HIDDEN_TEXTAREA_STYLE","SIZING_STYLE","computedStyleCache","hiddenTextarea","calculateNodeStyling","node","useCache","nodeRef","style","boxSizing","paddingSize","borderSize","sizingStyle","name","nodeInfo","calculateAutoSizeStyle","uiTextNode","minRows","maxRows","_calculateNodeStyling","minHeight","maxHeight","overflowY","height","singleRowHeight","_excluded","RESIZE_START","RESIZE_MEASURING","RESIZE_STABLE","ResizableTextArea","React.forwardRef","props","ref","_ref","prefixCls","defaultValue","value","autoSize","onResize","className","disabled","onChange","restProps","_objectWithoutProperties","_useMergedState","useMergedState","val","_useMergedState2","_slicedToArray","mergedValue","setMergedValue","onInternalChange","event","textareaRef","React.useRef","React.useImperativeHandle","_React$useMemo","React.useMemo","_typeof","_React$useMemo2","needAutoSize","fixFirefoxAutoScroll","_textareaRef$current","selectionStart","selectionEnd","scrollTop","_React$useState","React.useState","_React$useState2","resizeState","setResizeState","_React$useState3","_React$useState4","autoSizeStyle","setAutoSizeStyle","startResize","useLayoutEffect","textareaStyles","resizeRafRef","cleanRaf","raf","onInternalResize","size","React.useEffect","mergedAutoSizeStyle","mergedStyle","_objectSpread","React.createElement","ResizeObserver","_extends","classNames","_defineProperty","TextArea","React","_countConfig$max","customValue","onFocus","onBlur","allowClear","maxLength","onCompositionStart","onCompositionEnd","suffix","_ref$prefixCls","showCount","count","hidden","styles","onClear","onPressEnter","readOnly","onKeyDown","rest","setValue","formatValue","focused","setFocused","compositionRef","textareaResized","setTextareaResized","holderRef","useRef","resizableTextAreaRef","getTextArea","_resizableTextAreaRef","focus","useImperativeHandle","_holderRef$current","useEffect","prev","_React$useState5","_React$useState6","selection","setSelection","_getTextArea","_toConsumableArray","countConfig","useCount","mergedMax","hasMaxLength","valueLength","isOutOfRange","triggerChange","e","currentValue","cutValue","resolveOnChange","onInternalCompositionStart","onInternalCompositionEnd","handleKeyDown","handleFocus","handleBlur","handleReset","suffixNode","dataCount","clsx","handleResize","_getTextArea2","isPureTextArea","BaseInput"],"mappings":"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","x_google_ignoreList":[0,1,2]}