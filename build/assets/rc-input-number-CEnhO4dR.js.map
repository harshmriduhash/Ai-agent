{"version":3,"file":"rc-input-number-CEnhO4dR.js","sources":["../../node_modules/rc-input-number/es/hooks/useCursor.js","../../node_modules/rc-input-number/es/StepHandler.js","../../node_modules/rc-input-number/es/utils/numberUtil.js","../../node_modules/rc-input-number/es/hooks/useFrame.js","../../node_modules/rc-input-number/es/InputNumber.js"],"sourcesContent":["import { useRef } from 'react';\nimport warning from \"rc-util/es/warning\";\n/**\n * Keep input cursor in the correct position if possible.\n * Is this necessary since we have `formatter` which may mass the content?\n */\nexport default function useCursor(input, focused) {\n  var selectionRef = useRef(null);\n  function recordCursor() {\n    // Record position\n    try {\n      var start = input.selectionStart,\n        end = input.selectionEnd,\n        value = input.value;\n      var beforeTxt = value.substring(0, start);\n      var afterTxt = value.substring(end);\n      selectionRef.current = {\n        start: start,\n        end: end,\n        value: value,\n        beforeTxt: beforeTxt,\n        afterTxt: afterTxt\n      };\n    } catch (e) {\n      // Fix error in Chrome:\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  }\n\n  /**\n   * Restore logic:\n   *  1. back string same\n   *  2. start string same\n   */\n  function restoreCursor() {\n    if (input && selectionRef.current && focused) {\n      try {\n        var value = input.value;\n        var _selectionRef$current = selectionRef.current,\n          beforeTxt = _selectionRef$current.beforeTxt,\n          afterTxt = _selectionRef$current.afterTxt,\n          start = _selectionRef$current.start;\n        var startPos = value.length;\n        if (value.startsWith(beforeTxt)) {\n          startPos = beforeTxt.length;\n        } else if (value.endsWith(afterTxt)) {\n          startPos = value.length - selectionRef.current.afterTxt.length;\n        } else {\n          var beforeLastChar = beforeTxt[start - 1];\n          var newIndex = value.indexOf(beforeLastChar, start - 1);\n          if (newIndex !== -1) {\n            startPos = newIndex + 1;\n          }\n        }\n        input.setSelectionRange(startPos, startPos);\n      } catch (e) {\n        warning(false, \"Something warning of cursor restore. Please fire issue about this: \".concat(e.message));\n      }\n    }\n  }\n  return [recordCursor, restoreCursor];\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n/* eslint-disable react/no-unknown-property */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMobile from \"rc-util/es/hooks/useMobile\";\nimport raf from \"rc-util/es/raf\";\n\n/**\n * When click and hold on a button - the speed of auto changing the value.\n */\nvar STEP_INTERVAL = 200;\n\n/**\n * When click and hold on a button - the delay before auto changing the value.\n */\nvar STEP_DELAY = 600;\nexport default function StepHandler(_ref) {\n  var prefixCls = _ref.prefixCls,\n    upNode = _ref.upNode,\n    downNode = _ref.downNode,\n    upDisabled = _ref.upDisabled,\n    downDisabled = _ref.downDisabled,\n    onStep = _ref.onStep;\n  // ======================== Step ========================\n  var stepTimeoutRef = React.useRef();\n  var frameIds = React.useRef([]);\n  var onStepRef = React.useRef();\n  onStepRef.current = onStep;\n  var onStopStep = function onStopStep() {\n    clearTimeout(stepTimeoutRef.current);\n  };\n\n  // We will interval update step when hold mouse down\n  var onStepMouseDown = function onStepMouseDown(e, up) {\n    e.preventDefault();\n    onStopStep();\n    onStepRef.current(up);\n\n    // Loop step for interval\n    function loopStep() {\n      onStepRef.current(up);\n      stepTimeoutRef.current = setTimeout(loopStep, STEP_INTERVAL);\n    }\n\n    // First time press will wait some time to trigger loop step update\n    stepTimeoutRef.current = setTimeout(loopStep, STEP_DELAY);\n  };\n  React.useEffect(function () {\n    return function () {\n      onStopStep();\n      frameIds.current.forEach(function (id) {\n        return raf.cancel(id);\n      });\n    };\n  }, []);\n\n  // ======================= Render =======================\n  var isMobile = useMobile();\n  if (isMobile) {\n    return null;\n  }\n  var handlerClassName = \"\".concat(prefixCls, \"-handler\");\n  var upClassName = classNames(handlerClassName, \"\".concat(handlerClassName, \"-up\"), _defineProperty({}, \"\".concat(handlerClassName, \"-up-disabled\"), upDisabled));\n  var downClassName = classNames(handlerClassName, \"\".concat(handlerClassName, \"-down\"), _defineProperty({}, \"\".concat(handlerClassName, \"-down-disabled\"), downDisabled));\n\n  // fix: https://github.com/ant-design/ant-design/issues/43088\n  // In Safari, When we fire onmousedown and onmouseup events in quick succession, \n  // there may be a problem that the onmouseup events are executed first, \n  // resulting in a disordered program execution.\n  // So, we need to use requestAnimationFrame to ensure that the onmouseup event is executed after the onmousedown event.\n  var safeOnStopStep = function safeOnStopStep() {\n    return frameIds.current.push(raf(onStopStep));\n  };\n  var sharedHandlerProps = {\n    unselectable: 'on',\n    role: 'button',\n    onMouseUp: safeOnStopStep,\n    onMouseLeave: safeOnStopStep\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(handlerClassName, \"-wrap\")\n  }, /*#__PURE__*/React.createElement(\"span\", _extends({}, sharedHandlerProps, {\n    onMouseDown: function onMouseDown(e) {\n      onStepMouseDown(e, true);\n    },\n    \"aria-label\": \"Increase Value\",\n    \"aria-disabled\": upDisabled,\n    className: upClassName\n  }), upNode || /*#__PURE__*/React.createElement(\"span\", {\n    unselectable: \"on\",\n    className: \"\".concat(prefixCls, \"-handler-up-inner\")\n  })), /*#__PURE__*/React.createElement(\"span\", _extends({}, sharedHandlerProps, {\n    onMouseDown: function onMouseDown(e) {\n      onStepMouseDown(e, false);\n    },\n    \"aria-label\": \"Decrease Value\",\n    \"aria-disabled\": downDisabled,\n    className: downClassName\n  }), downNode || /*#__PURE__*/React.createElement(\"span\", {\n    unselectable: \"on\",\n    className: \"\".concat(prefixCls, \"-handler-down-inner\")\n  })));\n}","import { trimNumber, num2str } from '@rc-component/mini-decimal';\nexport function getDecupleSteps(step) {\n  var stepStr = typeof step === 'number' ? num2str(step) : trimNumber(step).fullStr;\n  var hasPoint = stepStr.includes('.');\n  if (!hasPoint) {\n    return step + '0';\n  }\n  return trimNumber(stepStr.replace(/(\\d)\\.(\\d)/g, '$1$2.')).fullStr;\n}","import { useRef, useEffect } from 'react';\nimport raf from \"rc-util/es/raf\";\n\n/**\n * Always trigger latest once when call multiple time\n */\nexport default (function () {\n  var idRef = useRef(0);\n  var cleanUp = function cleanUp() {\n    raf.cancel(idRef.current);\n  };\n  useEffect(function () {\n    return cleanUp;\n  }, []);\n  return function (callback) {\n    cleanUp();\n    idRef.current = raf(function () {\n      callback();\n    });\n  };\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"className\", \"style\", \"min\", \"max\", \"step\", \"defaultValue\", \"value\", \"disabled\", \"readOnly\", \"upHandler\", \"downHandler\", \"keyboard\", \"changeOnWheel\", \"controls\", \"classNames\", \"stringMode\", \"parser\", \"formatter\", \"precision\", \"decimalSeparator\", \"onChange\", \"onInput\", \"onPressEnter\", \"onStep\", \"changeOnBlur\", \"domRef\"],\n  _excluded2 = [\"disabled\", \"style\", \"prefixCls\", \"value\", \"prefix\", \"suffix\", \"addonBefore\", \"addonAfter\", \"className\", \"classNames\"];\nimport getMiniDecimal, { getNumberPrecision, num2str, toFixed, validateNumber } from '@rc-component/mini-decimal';\nimport clsx from 'classnames';\nimport { BaseInput } from 'rc-input';\nimport { useLayoutUpdateEffect } from \"rc-util/es/hooks/useLayoutEffect\";\nimport proxyObject from \"rc-util/es/proxyObject\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport useCursor from \"./hooks/useCursor\";\nimport StepHandler from \"./StepHandler\";\nimport { getDecupleSteps } from \"./utils/numberUtil\";\nimport { triggerFocus } from \"rc-input/es/utils/commonUtils\";\nimport useFrame from \"./hooks/useFrame\";\n/**\n * We support `stringMode` which need handle correct type when user call in onChange\n * format max or min value\n * 1. if isInvalid return null\n * 2. if precision is undefined, return decimal\n * 3. format with precision\n *    I. if max > 0, round down with precision. Example: max= 3.5, precision=0  afterFormat: 3\n *    II. if max < 0, round up with precision. Example: max= -3.5, precision=0  afterFormat: -4\n *    III. if min > 0, round up with precision. Example: min= 3.5, precision=0  afterFormat: 4\n *    IV. if min < 0, round down with precision. Example: max= -3.5, precision=0  afterFormat: -3\n */\nvar getDecimalValue = function getDecimalValue(stringMode, decimalValue) {\n  if (stringMode || decimalValue.isEmpty()) {\n    return decimalValue.toString();\n  }\n  return decimalValue.toNumber();\n};\nvar getDecimalIfValidate = function getDecimalIfValidate(value) {\n  var decimal = getMiniDecimal(value);\n  return decimal.isInvalidate() ? null : decimal;\n};\nvar InternalInputNumber = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n    className = props.className,\n    style = props.style,\n    min = props.min,\n    max = props.max,\n    _props$step = props.step,\n    step = _props$step === void 0 ? 1 : _props$step,\n    defaultValue = props.defaultValue,\n    value = props.value,\n    disabled = props.disabled,\n    readOnly = props.readOnly,\n    upHandler = props.upHandler,\n    downHandler = props.downHandler,\n    keyboard = props.keyboard,\n    _props$changeOnWheel = props.changeOnWheel,\n    changeOnWheel = _props$changeOnWheel === void 0 ? false : _props$changeOnWheel,\n    _props$controls = props.controls,\n    controls = _props$controls === void 0 ? true : _props$controls,\n    classNames = props.classNames,\n    stringMode = props.stringMode,\n    parser = props.parser,\n    formatter = props.formatter,\n    precision = props.precision,\n    decimalSeparator = props.decimalSeparator,\n    onChange = props.onChange,\n    onInput = props.onInput,\n    onPressEnter = props.onPressEnter,\n    onStep = props.onStep,\n    _props$changeOnBlur = props.changeOnBlur,\n    changeOnBlur = _props$changeOnBlur === void 0 ? true : _props$changeOnBlur,\n    domRef = props.domRef,\n    inputProps = _objectWithoutProperties(props, _excluded);\n  var inputClassName = \"\".concat(prefixCls, \"-input\");\n  var inputRef = React.useRef(null);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    focus = _React$useState2[0],\n    setFocus = _React$useState2[1];\n  var userTypingRef = React.useRef(false);\n  var compositionRef = React.useRef(false);\n  var shiftKeyRef = React.useRef(false);\n\n  // ============================ Value =============================\n  // Real value control\n  var _React$useState3 = React.useState(function () {\n      return getMiniDecimal(value !== null && value !== void 0 ? value : defaultValue);\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    decimalValue = _React$useState4[0],\n    setDecimalValue = _React$useState4[1];\n  function setUncontrolledDecimalValue(newDecimal) {\n    if (value === undefined) {\n      setDecimalValue(newDecimal);\n    }\n  }\n\n  // ====================== Parser & Formatter ======================\n  /**\n   * `precision` is used for formatter & onChange.\n   * It will auto generate by `value` & `step`.\n   * But it will not block user typing.\n   *\n   * Note: Auto generate `precision` is used for legacy logic.\n   * We should remove this since we already support high precision with BigInt.\n   *\n   * @param number  Provide which number should calculate precision\n   * @param userTyping  Change by user typing\n   */\n  var getPrecision = React.useCallback(function (numStr, userTyping) {\n    if (userTyping) {\n      return undefined;\n    }\n    if (precision >= 0) {\n      return precision;\n    }\n    return Math.max(getNumberPrecision(numStr), getNumberPrecision(step));\n  }, [precision, step]);\n\n  // >>> Parser\n  var mergedParser = React.useCallback(function (num) {\n    var numStr = String(num);\n    if (parser) {\n      return parser(numStr);\n    }\n    var parsedStr = numStr;\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace(decimalSeparator, '.');\n    }\n\n    // [Legacy] We still support auto convert `$ 123,456` to `123456`\n    return parsedStr.replace(/[^\\w.-]+/g, '');\n  }, [parser, decimalSeparator]);\n\n  // >>> Formatter\n  var inputValueRef = React.useRef('');\n  var mergedFormatter = React.useCallback(function (number, userTyping) {\n    if (formatter) {\n      return formatter(number, {\n        userTyping: userTyping,\n        input: String(inputValueRef.current)\n      });\n    }\n    var str = typeof number === 'number' ? num2str(number) : number;\n\n    // User typing will not auto format with precision directly\n    if (!userTyping) {\n      var mergedPrecision = getPrecision(str, userTyping);\n      if (validateNumber(str) && (decimalSeparator || mergedPrecision >= 0)) {\n        // Separator\n        var separatorStr = decimalSeparator || '.';\n        str = toFixed(str, separatorStr, mergedPrecision);\n      }\n    }\n    return str;\n  }, [formatter, getPrecision, decimalSeparator]);\n\n  // ========================== InputValue ==========================\n  /**\n   * Input text value control\n   *\n   * User can not update input content directly. It updates with follow rules by priority:\n   *  1. controlled `value` changed\n   *    * [SPECIAL] Typing like `1.` should not immediately convert to `1`\n   *  2. User typing with format (not precision)\n   *  3. Blur or Enter trigger revalidate\n   */\n  var _React$useState5 = React.useState(function () {\n      var initValue = defaultValue !== null && defaultValue !== void 0 ? defaultValue : value;\n      if (decimalValue.isInvalidate() && ['string', 'number'].includes(_typeof(initValue))) {\n        return Number.isNaN(initValue) ? '' : initValue;\n      }\n      return mergedFormatter(decimalValue.toString(), false);\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    inputValue = _React$useState6[0],\n    setInternalInputValue = _React$useState6[1];\n  inputValueRef.current = inputValue;\n\n  // Should always be string\n  function setInputValue(newValue, userTyping) {\n    setInternalInputValue(mergedFormatter(\n    // Invalidate number is sometime passed by external control, we should let it go\n    // Otherwise is controlled by internal interactive logic which check by userTyping\n    // You can ref 'show limited value when input is not focused' test for more info.\n    newValue.isInvalidate() ? newValue.toString(false) : newValue.toString(!userTyping), userTyping));\n  }\n\n  // >>> Max & Min limit\n  var maxDecimal = React.useMemo(function () {\n    return getDecimalIfValidate(max);\n  }, [max, precision]);\n  var minDecimal = React.useMemo(function () {\n    return getDecimalIfValidate(min);\n  }, [min, precision]);\n  var upDisabled = React.useMemo(function () {\n    if (!maxDecimal || !decimalValue || decimalValue.isInvalidate()) {\n      return false;\n    }\n    return maxDecimal.lessEquals(decimalValue);\n  }, [maxDecimal, decimalValue]);\n  var downDisabled = React.useMemo(function () {\n    if (!minDecimal || !decimalValue || decimalValue.isInvalidate()) {\n      return false;\n    }\n    return decimalValue.lessEquals(minDecimal);\n  }, [minDecimal, decimalValue]);\n\n  // Cursor controller\n  var _useCursor = useCursor(inputRef.current, focus),\n    _useCursor2 = _slicedToArray(_useCursor, 2),\n    recordCursor = _useCursor2[0],\n    restoreCursor = _useCursor2[1];\n\n  // ============================= Data =============================\n  /**\n   * Find target value closet within range.\n   * e.g. [11, 28]:\n   *    3  => 11\n   *    23 => 23\n   *    99 => 28\n   */\n  var getRangeValue = function getRangeValue(target) {\n    // target > max\n    if (maxDecimal && !target.lessEquals(maxDecimal)) {\n      return maxDecimal;\n    }\n\n    // target < min\n    if (minDecimal && !minDecimal.lessEquals(target)) {\n      return minDecimal;\n    }\n    return null;\n  };\n\n  /**\n   * Check value is in [min, max] range\n   */\n  var isInRange = function isInRange(target) {\n    return !getRangeValue(target);\n  };\n\n  /**\n   * Trigger `onChange` if value validated and not equals of origin.\n   * Return the value that re-align in range.\n   */\n  var triggerValueUpdate = function triggerValueUpdate(newValue, userTyping) {\n    var updateValue = newValue;\n    var isRangeValidate = isInRange(updateValue) || updateValue.isEmpty();\n\n    // Skip align value when trigger value is empty.\n    // We just trigger onChange(null)\n    // This should not block user typing\n    if (!updateValue.isEmpty() && !userTyping) {\n      // Revert value in range if needed\n      updateValue = getRangeValue(updateValue) || updateValue;\n      isRangeValidate = true;\n    }\n    if (!readOnly && !disabled && isRangeValidate) {\n      var numStr = updateValue.toString();\n      var mergedPrecision = getPrecision(numStr, userTyping);\n      if (mergedPrecision >= 0) {\n        updateValue = getMiniDecimal(toFixed(numStr, '.', mergedPrecision));\n\n        // When to fixed. The value may out of min & max range.\n        // 4 in [0, 3.8] => 3.8 => 4 (toFixed)\n        if (!isInRange(updateValue)) {\n          updateValue = getMiniDecimal(toFixed(numStr, '.', mergedPrecision, true));\n        }\n      }\n\n      // Trigger event\n      if (!updateValue.equals(decimalValue)) {\n        setUncontrolledDecimalValue(updateValue);\n        onChange === null || onChange === void 0 || onChange(updateValue.isEmpty() ? null : getDecimalValue(stringMode, updateValue));\n\n        // Reformat input if value is not controlled\n        if (value === undefined) {\n          setInputValue(updateValue, userTyping);\n        }\n      }\n      return updateValue;\n    }\n    return decimalValue;\n  };\n\n  // ========================== User Input ==========================\n  var onNextPromise = useFrame();\n\n  // >>> Collect input value\n  var collectInputValue = function collectInputValue(inputStr) {\n    recordCursor();\n\n    // Update inputValue in case input can not parse as number\n    // Refresh ref value immediately since it may used by formatter\n    inputValueRef.current = inputStr;\n    setInternalInputValue(inputStr);\n\n    // Parse number\n    if (!compositionRef.current) {\n      var finalValue = mergedParser(inputStr);\n      var finalDecimal = getMiniDecimal(finalValue);\n      if (!finalDecimal.isNaN()) {\n        triggerValueUpdate(finalDecimal, true);\n      }\n    }\n\n    // Trigger onInput later to let user customize value if they want to handle something after onChange\n    onInput === null || onInput === void 0 || onInput(inputStr);\n\n    // optimize for chinese input experience\n    // https://github.com/ant-design/ant-design/issues/8196\n    onNextPromise(function () {\n      var nextInputStr = inputStr;\n      if (!parser) {\n        nextInputStr = inputStr.replace(/。/g, '.');\n      }\n      if (nextInputStr !== inputStr) {\n        collectInputValue(nextInputStr);\n      }\n    });\n  };\n\n  // >>> Composition\n  var onCompositionStart = function onCompositionStart() {\n    compositionRef.current = true;\n  };\n  var onCompositionEnd = function onCompositionEnd() {\n    compositionRef.current = false;\n    collectInputValue(inputRef.current.value);\n  };\n\n  // >>> Input\n  var onInternalInput = function onInternalInput(e) {\n    collectInputValue(e.target.value);\n  };\n\n  // ============================= Step =============================\n  var onInternalStep = function onInternalStep(up) {\n    var _inputRef$current;\n    // Ignore step since out of range\n    if (up && upDisabled || !up && downDisabled) {\n      return;\n    }\n\n    // Clear typing status since it may be caused by up & down key.\n    // We should sync with input value.\n    userTypingRef.current = false;\n    var stepDecimal = getMiniDecimal(shiftKeyRef.current ? getDecupleSteps(step) : step);\n    if (!up) {\n      stepDecimal = stepDecimal.negate();\n    }\n    var target = (decimalValue || getMiniDecimal(0)).add(stepDecimal.toString());\n    var updatedValue = triggerValueUpdate(target, false);\n    onStep === null || onStep === void 0 || onStep(getDecimalValue(stringMode, updatedValue), {\n      offset: shiftKeyRef.current ? getDecupleSteps(step) : step,\n      type: up ? 'up' : 'down'\n    });\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 || _inputRef$current.focus();\n  };\n\n  // ============================ Flush =============================\n  /**\n   * Flush current input content to trigger value change & re-formatter input if needed.\n   * This will always flush input value for update.\n   * If it's invalidate, will fallback to last validate value.\n   */\n  var flushInputValue = function flushInputValue(userTyping) {\n    var parsedValue = getMiniDecimal(mergedParser(inputValue));\n    var formatValue;\n    if (!parsedValue.isNaN()) {\n      // Only validate value or empty value can be re-fill to inputValue\n      // Reassign the formatValue within ranged of trigger control\n      formatValue = triggerValueUpdate(parsedValue, userTyping);\n    } else {\n      formatValue = triggerValueUpdate(decimalValue, userTyping);\n    }\n    if (value !== undefined) {\n      // Reset back with controlled value first\n      setInputValue(decimalValue, false);\n    } else if (!formatValue.isNaN()) {\n      // Reset input back since no validate value\n      setInputValue(formatValue, false);\n    }\n  };\n\n  // Solve the issue of the event triggering sequence when entering numbers in chinese input (Safari)\n  var onBeforeInput = function onBeforeInput() {\n    userTypingRef.current = true;\n  };\n  var onKeyDown = function onKeyDown(event) {\n    var key = event.key,\n      shiftKey = event.shiftKey;\n    userTypingRef.current = true;\n    shiftKeyRef.current = shiftKey;\n    if (key === 'Enter') {\n      if (!compositionRef.current) {\n        userTypingRef.current = false;\n      }\n      flushInputValue(false);\n      onPressEnter === null || onPressEnter === void 0 || onPressEnter(event);\n    }\n    if (keyboard === false) {\n      return;\n    }\n\n    // Do step\n    if (!compositionRef.current && ['Up', 'ArrowUp', 'Down', 'ArrowDown'].includes(key)) {\n      onInternalStep(key === 'Up' || key === 'ArrowUp');\n      event.preventDefault();\n    }\n  };\n  var onKeyUp = function onKeyUp() {\n    userTypingRef.current = false;\n    shiftKeyRef.current = false;\n  };\n  React.useEffect(function () {\n    if (changeOnWheel && focus) {\n      var onWheel = function onWheel(event) {\n        // moving mouse wheel rises wheel event with deltaY < 0\n        // scroll value grows from top to bottom, as screen Y coordinate\n        onInternalStep(event.deltaY < 0);\n        event.preventDefault();\n      };\n      var input = inputRef.current;\n      if (input) {\n        // React onWheel is passive and we can't preventDefault() in it.\n        // That's why we should subscribe with DOM listener\n        // https://stackoverflow.com/questions/63663025/react-onwheel-handler-cant-preventdefault-because-its-a-passive-event-listenev\n        input.addEventListener('wheel', onWheel, {\n          passive: false\n        });\n        return function () {\n          return input.removeEventListener('wheel', onWheel);\n        };\n      }\n    }\n  });\n\n  // >>> Focus & Blur\n  var onBlur = function onBlur() {\n    if (changeOnBlur) {\n      flushInputValue(false);\n    }\n    setFocus(false);\n    userTypingRef.current = false;\n  };\n\n  // ========================== Controlled ==========================\n  // Input by precision & formatter\n  useLayoutUpdateEffect(function () {\n    if (!decimalValue.isInvalidate()) {\n      setInputValue(decimalValue, false);\n    }\n  }, [precision, formatter]);\n\n  // Input by value\n  useLayoutUpdateEffect(function () {\n    var newValue = getMiniDecimal(value);\n    setDecimalValue(newValue);\n    var currentParsedValue = getMiniDecimal(mergedParser(inputValue));\n\n    // When user typing from `1.2` to `1.`, we should not convert to `1` immediately.\n    // But let it go if user set `formatter`\n    if (!newValue.equals(currentParsedValue) || !userTypingRef.current || formatter) {\n      // Update value as effect\n      setInputValue(newValue, userTypingRef.current);\n    }\n  }, [value]);\n\n  // ============================ Cursor ============================\n  useLayoutUpdateEffect(function () {\n    if (formatter) {\n      restoreCursor();\n    }\n  }, [inputValue]);\n\n  // ============================ Render ============================\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: domRef,\n    className: clsx(prefixCls, className, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-focused\"), focus), \"\".concat(prefixCls, \"-disabled\"), disabled), \"\".concat(prefixCls, \"-readonly\"), readOnly), \"\".concat(prefixCls, \"-not-a-number\"), decimalValue.isNaN()), \"\".concat(prefixCls, \"-out-of-range\"), !decimalValue.isInvalidate() && !isInRange(decimalValue))),\n    style: style,\n    onFocus: function onFocus() {\n      setFocus(true);\n    },\n    onBlur: onBlur,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd,\n    onBeforeInput: onBeforeInput\n  }, controls && /*#__PURE__*/React.createElement(StepHandler, {\n    prefixCls: prefixCls,\n    upNode: upHandler,\n    downNode: downHandler,\n    upDisabled: upDisabled,\n    downDisabled: downDisabled,\n    onStep: onInternalStep\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(inputClassName, \"-wrap\")\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoComplete: \"off\",\n    role: \"spinbutton\",\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": decimalValue.isInvalidate() ? null : decimalValue.toString(),\n    step: step\n  }, inputProps, {\n    ref: composeRef(inputRef, ref),\n    className: inputClassName,\n    value: inputValue,\n    onChange: onInternalInput,\n    disabled: disabled,\n    readOnly: readOnly\n  }))));\n});\nvar InputNumber = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var disabled = props.disabled,\n    style = props.style,\n    _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-input-number' : _props$prefixCls,\n    value = props.value,\n    prefix = props.prefix,\n    suffix = props.suffix,\n    addonBefore = props.addonBefore,\n    addonAfter = props.addonAfter,\n    className = props.className,\n    classNames = props.classNames,\n    rest = _objectWithoutProperties(props, _excluded2);\n  var holderRef = React.useRef(null);\n  var inputNumberDomRef = React.useRef(null);\n  var inputFocusRef = React.useRef(null);\n  var focus = function focus(option) {\n    if (inputFocusRef.current) {\n      triggerFocus(inputFocusRef.current, option);\n    }\n  };\n  React.useImperativeHandle(ref, function () {\n    return proxyObject(inputFocusRef.current, {\n      focus: focus,\n      nativeElement: holderRef.current.nativeElement || inputNumberDomRef.current\n    });\n  });\n  return /*#__PURE__*/React.createElement(BaseInput, {\n    className: className,\n    triggerFocus: focus,\n    prefixCls: prefixCls,\n    value: value,\n    disabled: disabled,\n    style: style,\n    prefix: prefix,\n    suffix: suffix,\n    addonAfter: addonAfter,\n    addonBefore: addonBefore,\n    classNames: classNames,\n    components: {\n      affixWrapper: 'div',\n      groupWrapper: 'div',\n      wrapper: 'div',\n      groupAddon: 'div'\n    },\n    ref: holderRef\n  }, /*#__PURE__*/React.createElement(InternalInputNumber, _extends({\n    prefixCls: prefixCls,\n    disabled: disabled,\n    ref: inputFocusRef,\n    domRef: inputNumberDomRef,\n    className: classNames === null || classNames === void 0 ? void 0 : classNames.input\n  }, rest)));\n});\nif (process.env.NODE_ENV !== 'production') {\n  InputNumber.displayName = 'InputNumber';\n}\nexport default InputNumber;"],"names":["useCursor","input","focused","selectionRef","useRef","recordCursor","start","end","value","beforeTxt","afterTxt","restoreCursor","_selectionRef$current","startPos","beforeLastChar","newIndex","e","warning","STEP_INTERVAL","STEP_DELAY","StepHandler","_ref","prefixCls","upNode","downNode","upDisabled","downDisabled","onStep","stepTimeoutRef","React.useRef","frameIds","onStepRef","onStopStep","onStepMouseDown","up","loopStep","React.useEffect","id","raf","isMobile","useMobile","handlerClassName","upClassName","classNames","_defineProperty","downClassName","safeOnStopStep","sharedHandlerProps","React.createElement","_extends","getDecupleSteps","step","stepStr","num2str","trimNumber","hasPoint","useFrame","idRef","cleanUp","useEffect","callback","_excluded","_excluded2","getDecimalValue","stringMode","decimalValue","getDecimalIfValidate","decimal","getMiniDecimal","InternalInputNumber","React.forwardRef","props","ref","className","style","min","max","_props$step","defaultValue","disabled","readOnly","upHandler","downHandler","keyboard","_props$changeOnWheel","changeOnWheel","_props$controls","controls","parser","formatter","precision","decimalSeparator","onChange","onInput","onPressEnter","_props$changeOnBlur","changeOnBlur","domRef","inputProps","_objectWithoutProperties","inputClassName","inputRef","_React$useState","React.useState","_React$useState2","_slicedToArray","focus","setFocus","userTypingRef","compositionRef","shiftKeyRef","_React$useState3","_React$useState4","setDecimalValue","setUncontrolledDecimalValue","newDecimal","getPrecision","React.useCallback","numStr","userTyping","getNumberPrecision","mergedParser","num","parsedStr","inputValueRef","mergedFormatter","number","str","mergedPrecision","validateNumber","separatorStr","toFixed","_React$useState5","initValue","_typeof","_React$useState6","inputValue","setInternalInputValue","setInputValue","newValue","maxDecimal","React.useMemo","minDecimal","_useCursor","_useCursor2","getRangeValue","target","isInRange","triggerValueUpdate","updateValue","isRangeValidate","onNextPromise","collectInputValue","inputStr","finalValue","finalDecimal","nextInputStr","onCompositionStart","onCompositionEnd","onInternalInput","onInternalStep","_inputRef$current","stepDecimal","updatedValue","flushInputValue","parsedValue","formatValue","onBeforeInput","onKeyDown","event","key","shiftKey","onKeyUp","onWheel","onBlur","useLayoutUpdateEffect","currentParsedValue","clsx","composeRef","InputNumber","_props$prefixCls","prefix","suffix","addonBefore","addonAfter","rest","holderRef","inputNumberDomRef","inputFocusRef","option","triggerFocus","React.useImperativeHandle","proxyObject","BaseInput"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}